# For help and tutorials, visit https://circleci.com/docs/
# For internal documentation visit https://enturas.atlassian.net/wiki/spaces/ESP/pages/580026490/CircleCI
version: 2.1

orbs:
  node: circleci/node@5.2.0

references:
  workspace_root: &workspace_root
    ~/project
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

aliases:
- &firebase_deploy_dev
  name: Google deploy dev
  command: |
    echo "${SERVICE_ACCOUNT_DEV}" > "${HOME}/account-auth.json"
    GOOGLE_APPLICATION_CREDENTIALS="${HOME}/account-auth.json" npx firebase -P dev deploy
- &firebase_deploy_staging
  name: Google deploy staging
  command: |
    echo "${SERVICE_ACCOUNT_STAGING}" > "${HOME}/account-auth.json"
    GOOGLE_APPLICATION_CREDENTIALS="${HOME}/account-auth.json" npx firebase -P staging deploy
- &firebase_deploy_prod
  name: Google deploy prod
  command: |
    echo "${SERVICE_ACCOUNT_PROD}" > "${HOME}/account-auth.json"
    GOOGLE_APPLICATION_CREDENTIALS="${HOME}/account-auth.json" npx firebase -P prod deploy

jobs:
  build:
    executor:
      name: node/default
      tag: '10.13'
    steps:
    - *attach_workspace
    - checkout
    - node/with-cache:
        cache-key: package-lock.json
        cache-version: v1
        steps:
          - run:
              name: Install dependencies
              command: npm install
    - run:
        name: "Run tests"
        command: npm run test
    - run:
        name: "Create production build"
        command: npm run build
    - persist_to_workspace:
        root: *workspace_root
        paths:
        - .
  deploy-dev:
    executor:
      name: node/default
      tag: '10.13'
    steps:
    - *attach_workspace
    - run: *firebase_deploy_dev
  deploy-staging:
    executor:
      name: node/default
      tag: '10.13'
    steps:
    - *attach_workspace
    - run: *firebase_deploy_staging
  deploy-prod:
    executor:
      name: node/default
      tag: '10.13'
    steps:
    - *attach_workspace
    - run: *firebase_deploy_prod

workflows:
  "Build Pipeline":
    jobs:
    - build
    - deploy-dev:
        context: global
        filters:
          branches:
            only: master
        requires:
          - build
    - approve-deploy-staging:
        type: approval
        requires:
          - deploy-dev
    - deploy-staging:
        context: global
        filters:
          branches:
            only: master
        requires:
          - approve-deploy-staging
    - approve-deploy-prod:
        type: approval
        requires:
          - deploy-staging
    - deploy-prod:
        context: global
        filters:
          branches:
            only: master
        requires:
          - approve-deploy-prod
